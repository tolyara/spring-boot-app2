package com.springboot.app2.wiki;

/**
 * Всего в REST есть шесть требований к проектированию API. Пять из них обязательные, одно — опциональное:
 *
 * Клиент-серверная модель (client-server model).
 * Отсутствие состояния (statelessness).
 * Кэширование (cacheability).
 * Единообразие интерфейса (uniform interface).
 * Многоуровневая система (layered system).
 * Код по требованию (code on demand) — необязательно.
 *
 *
 *
 * REST — это архитектурный стиль API. Он не ограничивается никакими протоколами и не имеет собственных методов.
 * Но обычно в RESTful-сервисах используют стандарт HTTP, а файлы передают в формате JSON или XML.
 *
 * REST-подход к архитектуре позволяет сделать сервисы отказоустойчивыми, гибкими и производительными,
 * а при их масштабировании и внесении изменений не возникает больших сложностей.
 *
 */
public class RestPrinciples {
}
